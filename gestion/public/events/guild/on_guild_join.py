import discord
import textwrap
import asyncio
from discord.ext import commands
from utils.PermissionsManager import PermissionsManager


class on_guild_join(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_guild_join(self, guild : discord.Guild):
        perms_enabled = await self.bot.db.get_data("guild", "perms_enabled", guild_id = guild.id) # si le bot a d√©j√† √©t√© pr√©c√©dement ajout√© au serveur et que le serveur avait activ√© le syst√®me de permission
        if perms_enabled:
            permission_manager = PermissionsManager(self.bot)
            await permission_manager.initialize_guild_perms(guild.id)

        user = None
        async for bot_added_log in guild.audit_logs(action = discord.AuditLogAction.bot_add):
            if bot_added_log.target == self.bot.user:
                user = bot_added_log.user
                break
        
        embed = discord.Embed(
            thumbnail = guild.me.avatar.url if guild.me.avatar else None,
            title = f"Merci de m'avoir ajout√© sur {guild.name}",
            color = 0xFFFFFF,
            description = textwrap.dedent("""
                Je suis un bot Discord multifonction et complet, con√ßu pour offrir une large gamme de fonctionnalit√©s avanc√©es. En raison de ma complexit√© et de mes capacit√©s √©tendues, je ne suis pas recommand√© pour les petits serveurs, car ceux-ci pourraient ne pas tirer pleinement parti de toutes mes fonctionnalit√©s.

                En cas de probl√®me n'h√©sitez pas √† nous contactez 
            """)
        )

        view = discord.ui.View()
        view.add_item(discord.ui.Button(label = f"{len(self.bot.guilds)} serveurs", emoji = "üåê", disabled = True))
        view.add_item(discord.ui.Button(label = f"{len(self.bot.users)} utilisateurs", emoji = "üë•", disabled = True))

        await asyncio.sleep(1.5) # Pour s'assurer que le bot ai le temps d'avoir rejoins le serveur (car le bot ne peut pas mp un membre qui n'a pas de serveur en commun avec lui)

        try: await user.send(embed = embed, view = view)
        except: pass

        if user != guild.owner:
            try: await guild.owner.send(embed = embed, view = view)
            except: pass
    
def setup(bot):
    bot.add_cog(on_guild_join(bot))