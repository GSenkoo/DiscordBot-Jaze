import discord
import textwrap
from datetime import datetime
from discord.ext import commands
from utils.PermissionsManager import PermissionsManager
from utils.Paginator import PaginatorCreator


class Gestion_des_Permissions(commands.Cog):
    def __init__(self, bot):
        self.bot = bot


    @commands.command(description = "Lire le guide de configuration des permissions.", aliases = ["gp"])
    @commands.guild_only()
    async def guideperms(self, ctx):
        bot = self.bot

        class PermGuideMenu(discord.ui.View):
            async def on_timeout(self):
                try: await self.message.edit(view = None)
                except: pass

            @discord.ui.select(
                placeholder = "Choisir un guide",
                options = [
                    discord.SelectOption(label = "1. Permissions hi√©rarchiques et personnalis√©es [1]", value = "perms_hp"),
                    discord.SelectOption(label = "1. Permissions hi√©rarchiques et personnalis√©es [2]", value = "perms_hp2"),
                    discord.SelectOption(label = "2. Comprendre vos configurations", value = "understand_config"),
                    discord.SelectOption(label = "3. G√©rer les commandes de vos permissions", value = "config_commands"),
                    discord.SelectOption(label = "4. G√©rer les autorisations de vos permissions", value = "manage_perms_of_perms"),
                    discord.SelectOption(label = "5. Les limites de configurations", value = "config_limit")
                ]
            )
            async def select_callback(self, select, interaction):
                if interaction.user != ctx.author:
                    await interaction.response.send_message("> Vous n'√™tes pas autoris√©s √† int√©ragir avec ceci.", ephemeral = True)
                    return
                
                await interaction.response.defer()

                for option in select.options:
                    option.default = option.value == select.values[0]

                if select.values[0] == "perms_hp":
                    await interaction.message.edit(
                        embed = discord.Embed(
                            color = await bot.get_theme(ctx.guild.id),
                            description = textwrap.dedent("""
                                ## Diff√©rences th√©oriques
                                La diff√©rence principale entre les permissions hi√©rarchiques et les permissions personnalis√©es est que les permissions hi√©rarchiques sont tri√©es par hi√©rarchie (comme son nom l'indique). Cela signifie que chaque permission a acc√®s √† toutes les commandes des permissions inf√©rieures (en plus des siennes).

                                En plus de cette diff√©rence, vous devrez √©galement noter que les permissions hi√©rarchiques sont not√©es par des nombres de 1 √† 9 repr√©sentant leur niveau dans la hi√©rarchie des permissions hi√©rarchiques.

                                ## Diff√©rences pratiques
                                La distinction entre ces deux types de permissions peut encore sembler assez floue. Voici donc un exemple concret :

                                *"Thomas souhaite faire en sorte que les @mod√©rateurs de son serveur aient acc√®s √† une certaine commande `+warn`. Il a d√©j√† configur√© ses param√®tres de telle sorte que les mod√©rateurs aient acc√®s √† la permission 2.*
                                *Mais Thomas veut aussi que tous les r√¥les avec une permission hi√©rarchique sup√©rieure aient acc√®s √† cette commande. Comment faire ?"*

                                > Dans un premier temps, il serait stupide de cr√©er des permissions personnalis√©es pour chaque r√¥le, cela prendrait un temps fou et la gestion serait plus difficile.
                                > Pour r√©soudre ce probl√®me, Thomas n'aura qu'√† configurer ses permissions de telle sorte que les r√¥les sup√©rieurs √† @mod√©rateurs aient acc√®s √† une permission sup√©rieure √† la permission 2, et c'est fini.
                            """)
                        ),
                        view = self
                    )
                if select.values == "perms_hp2":
                    await interaction.message.edit(
                        embed = discord.Embed(
                            color = await bot.get_theme(ctx.guild.id),
                            description = textwrap.dedent()
                        )
                    )

        current_date = datetime.now()
        await ctx.send(
            embed = discord.Embed(
                title = "Guide de configuration de vos permissions",
                description = textwrap.dedent(f"""
                {'Bonjour' if current_date.hour > 6 and current_date.hour < 20 else 'Bonsoir'} **{ctx.author.display_name}**, ce guide vous permettra de configurer facilement vos permissions. En suivant celui-ci du d√©but √† la fin, vous serez au final capable de :
                
                1. *Voir la diff√©rence permissions hi√©rarchiques et personnalis√©es.*
                2. *Comprendre la v√©rification des permissions par le bot.*
                3. *Cr√©er ou modifier vos permissions avec aisance.*

                Vous pouvez √©galement vous fier √† votre intuition si vous √™tes d√©j√† familier avec ce type de configuration. En cas de probl√®me de compr√©hension, vous pouvez toujours contacter et demander de l'aide √† notre support.
                """),
                color = await self.bot.get_theme(ctx.guild.id)
            ),
            view = PermGuideMenu()
        )

    
    @commands.command(description = "Voir les permissions hi√©rarchiques")
    @commands.guild_only()
    async def perms(self, ctx):
        class ConfigPerms(discord.ui.View):
            @discord.ui.select(
                placeholder = "Choisir une permission",
                options = [
                    discord.SelectOption(label = f"Perm{i}", emoji = "üîí", value = str(i)) for i in range(1, 10)
                ]
            )
            async def select_callback(self, select, interaction):
                if interaction.user != ctx.author:
                    await interaction.response.send_message("> Vous n'√™tes pas autoris√©s √† int√©ragir avec ceci.", ephemeral = True)
                    return
                

        embed = discord.Embed(
            title = "Permissions hi√©rarchiques",
            description = textwrap.dedent(f"""
                *Vous pouvez voir et modifier vos permsisions via le menu ci-dessous*
                *Pour voir les commandes par permissions, utilisez la commande `{await self.bot.get_prefix(ctx.message)}helpall`.*

                **__Vos permissions configur√©s__**

            """)
        )


    @commands.command(description = "Voir vos commandes par permissions hi√©rarchiques")
    @commands.guild_only()
    async def helpall(self, ctx):
        perms_manager = PermissionsManager()
        paginator_creator = PaginatorCreator()

        prefix = await self.bot.get_prefix(ctx.message)
        custom_names = {
            "0": "Public",
            "10": "Owner",
            "11": "Propri√©ataire"
        }
        descriptions = []
        for index in range(12):
            commands = await perms_manager.get_perm_commands(ctx.guild.id, index)
            if commands:
                descriptions.append(
                    f"*Utilisez des espaces pour s√©parer vos arguments, mettez les entre guillemets `\"\"` si vos arguments comportent des espaces. "
                    + "Les arguments sous forme `<...>` sont obligatoires, tandis que les arguments sous forme `[...]` sont facultatifs.*\n\n"
                    + "**__" + custom_names.get(str(index), f"Perm{index}") + "__**" + "\n"
                    + "**`" + "`**\n**`".join([f"{prefix}{command}" for command in commands]) + "`**"
                )

        paginator = await paginator_creator.create_paginator(
            title = "Commandes par permission",
            data_list = descriptions,
            data_per_page = 1,
            embed_color = await self.bot.get_theme(ctx.guild.id),
            pages_looped = True
        )

        await paginator.send(ctx)
        

    @commands.command(description = "Voir vos permissions personnalis√©es")
    @commands.guild_only()
    async def customperms(self, ctx):
        ...

    
    

    


def setup(bot):
    bot.add_cog(Gestion_des_Permissions(bot))